name: Deploy to Alpha-Test

on:
  workflow_dispatch:
    inputs:
      releaseTag:
        description: "Tag of version to be promoted to ALPHA-TEST"
        default: 'latest'
        required: true

env:
  TOOLS_NAMESPACE: ${{ secrets.OPENSHIFT_LICENSE_PLATE }}-tools
  ENVIRONMENT: test
  NAMESPACE: ${{ secrets.OPENSHIFT_LICENSE_PLATE }}-test

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Attempt to checkout tag
        if: github.event.inputs.releaseTag != 'latest'  # 'latest' is actually an Openshift image tag, not a GitHub tag
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.releaseTag }}

      - name: Tag not found
        if: ${{ failure() }}
        run: |
          echo "::error::Git Tag not found, please double check input"
          exit 1

      - name: Login OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
          openshift_token: ${{ secrets.OPENSHIFT_SERVICE_TOKEN }}

      - name: Tag Test images
        run: |
          oc -n ${{ env.TOOLS_NAMESPACE }} tag admin-develop:${{ github.event.inputs.releaseTag }} admin-develop:${{ env.ENVIRONMENT }}
          oc -n ${{ env.TOOLS_NAMESPACE }} tag public-builder-develop:${{ github.event.inputs.releaseTag }} public-builder-develop:${{ env.ENVIRONMENT }}
          oc -n ${{ env.TOOLS_NAMESPACE }} tag strapi-develop:${{ github.event.inputs.releaseTag }} strapi-develop:${{ env.ENVIRONMENT }}
          oc -n ${{ env.TOOLS_NAMESPACE }} tag maintenance-develop:${{ github.event.inputs.releaseTag }} maintenance-develop:${{ env.ENVIRONMENT }}

      - name: Trigger Gatsby static build workflow
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: publish-gatsby
          client-payload: '{"env": "${{ env.ENVIRONMENT }}", "branch": "develop"}'

      - name: Trigger new rollout
        run: |
          oc -n ${{ env.NAMESPACE }} rollout restart deployment develop-admin
          oc -n ${{ env.NAMESPACE }} rollout restart deployment develop-cms
          oc -n ${{ env.NAMESPACE }} rollout restart deployment develop-maintenance
